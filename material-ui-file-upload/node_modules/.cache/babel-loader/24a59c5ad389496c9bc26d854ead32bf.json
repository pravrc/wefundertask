{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/prav/dev/wefundertask/material-ui-file-upload/src/components/upload-files.component.js\";\nimport React, { Component } from \"react\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Box, Typography, Button, ListItem, withStyles } from '@material-ui/core';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport UploadService from \"../services/upload-files.service\";\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 15,\n    borderRadius: 5\n  },\n  colorPrimary: {\n    backgroundColor: \"#EEEEEE\"\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#1a90ff'\n  }\n}))(LinearProgress);\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"\",\n      isError: false,\n      fileInfos: []\n    };\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then(response => {\n      this.setState({\n        fileInfos: response.data\n      });\n    });\n  }\n\n  selectFile(event) {\n    this.setState({\n      selectedFiles: event.target.files\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n    this.setState({\n      progress: 0,\n      currentFile: currentFile\n    });\n    UploadService.upload(currentFile, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total)\n      });\n    }).then(response => {\n      this.setState({\n        message: response.data.message,\n        isError: false\n      });\n      return UploadService.getFiles();\n    }).then(files => {\n      this.setState({\n        fileInfos: files.data\n      });\n    }).catch(() => {\n      this.setState({\n        progress: 0,\n        message: \"Could not upload the file!\",\n        currentFile: undefined,\n        isError: true\n      });\n    });\n    this.setState({\n      selectedFiles: undefined\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos,\n      isError\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mg20\",\n      children: [currentFile && /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mb25\",\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: \"100%\",\n          mr: 1,\n          children: /*#__PURE__*/_jsxDEV(BorderLinearProgress, {\n            variant: \"determinate\",\n            value: progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          minWidth: 35,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: `${progress}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"btn-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"btn-upload\",\n          name: \"btn-upload\",\n          style: {\n            display: 'none'\n          },\n          type: \"file\",\n          onChange: this.selectFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-choose\",\n          variant: \"outlined\",\n          component: \"span\",\n          children: \"Choose Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-name\",\n        children: selectedFiles && selectedFiles.length > 0 ? selectedFiles[0].name : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-upload\",\n        color: \"primary\",\n        variant: \"contained\",\n        component: \"span\",\n        disabled: !selectedFiles,\n        onClick: this.upload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        className: `upload-message ${isError ? \"error\" : \"\"}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: fileInfos && fileInfos.map((file, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: file.url,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://source.unsplash.com/random/200x200?sig=\" + index,\n              title: file.name,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/prav/dev/wefundertask/material-ui-file-upload/src/components/upload-files.component.js"],"names":["React","Component","LinearProgress","Box","Typography","Button","ListItem","withStyles","ImageList","ImageListItem","UploadService","BorderLinearProgress","theme","root","height","borderRadius","colorPrimary","backgroundColor","bar","UploadFiles","constructor","props","selectFile","bind","upload","state","selectedFiles","undefined","currentFile","progress","message","isError","fileInfos","componentDidMount","getFiles","then","response","setState","data","event","target","files","Math","round","loaded","total","catch","render","display","length","name","map","file","index","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Box, Typography, Button, ListItem, withStyles } from '@material-ui/core';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\n\nimport UploadService from \"../services/upload-files.service\";\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 15,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#EEEEEE\",\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#1a90ff',\n  },\n}))(LinearProgress);\n\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"\",\n      isError: false,\n      fileInfos: [],\n    };\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then((response) => {\n      this.setState({\n        fileInfos: response.data,\n      });\n    });\n  }\n\n  selectFile(event) {\n    this.setState({\n      selectedFiles: event.target.files,\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n\n    this.setState({\n      progress: 0,\n      currentFile: currentFile,\n    });\n\n    UploadService.upload(currentFile, (event) => {\n      this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    })\n      .then((response) => {\n        this.setState({\n          message: response.data.message,\n          isError: false\n        });\n        return UploadService.getFiles();\n      })\n      .then((files) => {\n        this.setState({\n          fileInfos: files.data,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          progress: 0,\n          message: \"Could not upload the file!\",\n          currentFile: undefined,\n          isError: true\n        });\n      });\n\n    this.setState({\n      selectedFiles: undefined,\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos,\n      isError\n    } = this.state;\n    \n    return (\n      <div className=\"mg20\">\n        {currentFile && (\n          <Box className=\"mb25\" display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n              <BorderLinearProgress variant=\"determinate\" value={progress} />\n            </Box>\n            <Box minWidth={35}>\n              <Typography variant=\"body2\" color=\"textSecondary\">{`${progress}%`}</Typography>\n            </Box>\n          </Box>)\n        }\n\n        <label htmlFor=\"btn-upload\">\n          <input\n            id=\"btn-upload\"\n            name=\"btn-upload\"\n            style={{ display: 'none' }}\n            type=\"file\"\n            onChange={this.selectFile} />\n          <Button\n            className=\"btn-choose\"\n            variant=\"outlined\"\n            component=\"span\" >\n             Choose Files\n          </Button>\n        </label>\n        <div className=\"file-name\">\n        {selectedFiles && selectedFiles.length > 0 ? selectedFiles[0].name : null}\n        </div>\n        <Button\n          className=\"btn-upload\"\n          color=\"primary\"\n          variant=\"contained\"\n          component=\"span\"\n          disabled={!selectedFiles}\n          onClick={this.upload}>\n          Upload\n        </Button>\n\n        <Typography variant=\"subtitle2\" className={`upload-message ${isError ? \"error\" : \"\"}`}>\n          {message}\n        </Typography>\n\n        <ul className=\"list-group\">\n          {fileInfos &&\n            fileInfos.map((file, index) => (\n              <ListItem\n                divider\n                key={index}>\n                <a href={file.url}> <img src={\"https://source.unsplash.com/random/200x200?sig=\"+index} title={file.name} alt=\"\"/></a>\n              </ListItem>\n            ))}\n        </ul>\n      </div >\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}